Tree-Recursive
(define (f n)
	(cond ((< n 3) n)
		(else (+ (f ( - n 1)))
				 (* 2 (f (- n 2)))
				 (* 3 (f (- n 3))))))

Linear-iterative
(define (f n)
	(f-iter (2 1 0 n)))
0 1 2 4 11 25 59 142
(define (f-iter a b c count)
	(if (< count 3)
		count
		(f-iter (+ a (* 2 b) (* 3 c)) a b (- count 1))))
